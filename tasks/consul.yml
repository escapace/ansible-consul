---

- name: install dependencies
  package:
    name: "{{ packages }}"
  vars:
    packages:
     - curl
     - unzip
     - jq

- name: consul group
  ansible.builtin.group:
    name: consul
    state: present
    system: true

- name: consul user
  ansible.builtin.user:
    name: consul
    group: consul
    system: true

- name: copy temporary install-consul script
  ansible.builtin.copy:
    src: install-consul
    dest: /tmp/install-consul
    mode: "0644"
  changed_when: false

# - name: copy certificates
#   ansible.builtin.copy:
#     src:  "{{ item.src }}"
#     dest: "{{ item.dest }}"
#     mode: "0644"
#   loop:
#     - { src: "{{ consul_ca_file_path }}", dest: "{{ consul_remote_ca_file_path }}" }
#     - { src: "{{ consul_cert_file_path }}", dest: "{{ consul_remote_cert_file_path }}" }
#     - { src: "{{ consul_key_file_path }}", dest: "{{ consul_remote_key_file_path }}" }
#   changed_when: false

- name: run install-consul script
  ansible.builtin.shell: bash /tmp/install-consul --version {{ consul_version }}
  # ansible.builtin.shell: bash /tmp/install-consul --version {{ consul_version }} --ca-file-path {{ consul_remote_ca_file_path }} --cert-file-path {{ consul_remote_cert_file_path }} --key-file-path {{ consul_remote_key_file_path }}
  args:
    chdir: /
    creates: /opt/consul/bin/consul

- name: delete temporary install-consul script
  ansible.builtin.file:
    path: /tmp/install-consul
    state: absent
  changed_when: false

# - name: delete certificates
#   ansible.builtin.file:
#     path: "{{ item }}"
#     state: absent
#   with_items:
#     - "{{ consul_remote_ca_file_path }}"
#     - "{{ consul_remote_cert_file_path }}"
#     - "{{ consul_remote_key_file_path }}"
#   changed_when: false

- name: copy run-consul script
  ansible.builtin.copy:
    src: run-consul
    dest: /opt/consul/bin/run-consul
    mode: '0755'
    owner: consul
    group: consul

- name: chcon consul binary
  ansible.builtin.file:
    path: /opt/consul/bin/consul
    owner: consul
    group: consul
    mode: '0750'
    setype: bin_t
    seuser: system_u

- name: create the consul ferm conf files
  template: src=templates/1010-consul.conf.j2 dest=/etc/ferm/ferm.d/1010-consul.conf owner=root group=root mode=0600
  notify:
    - ferm restart

- name: consul kresd.conf.d files
  template:
    src: "{{ item }}"
    dest: /etc/knot-resolver/kresd.conf.d/{{ item | basename | regex_replace('.j2$', '') }}
    owner: root
    group: knot-resolver
    mode: 0640
  loop:
    - "810-policy-consul.conf.j2"
  notify:
    - kresd restart

- name: create consul service
  template: src=templates/consul.service.j2 dest=/etc/systemd/system/consul.service owner=root group=root mode=0644
  notify:
    - consul daemon-reload

- name: enable consul on boot
  service: name=consul enabled=yes

- include_tasks: health-check.yml
  when: consul_health_check | bool is true
